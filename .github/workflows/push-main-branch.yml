# Unique name for this workflow
name: Deploy main branch to production org

# Definition when the workflow should run
on:
  push:
    branches: [main]
    paths:
      - "force-app/**"

# Jobs to be executed
jobs:
  deploy-branch-to-production-org:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      # Install Salesforce CLI
      - name: "Install Salesforce CLI"
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
          mkdir ~/sfdx
          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
          echo "$HOME/sfdx/bin" >> $GITHUB_PATH
          ~/sfdx/bin/sfdx version

      # install SFDX-Git-Delta plugin - https://github.com/scolladon/sfdx-git-delta
      - name: "Installing sfdx git delta"
        run: |
          echo y | sfdx plugins:install sfdx-git-delta
          sfdx plugins

      # Checkout the source code
      - name: "Checkout source code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Store secret for production org
      - name: "Populate auth file with SFDX_URL secret of the production org"
        shell: bash
        run: |
          echo ${{ secrets.SFDX_PRODUCTION_URL}} > ./SFDX_PRODUCTION_URL.txt

      - name: "Create delta packages for new, modified or deleted metadata"
        run: |
          mkdir changed-sources
          sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/

      # Authenticate to org
      - name: "Authenticate to Production Org"
        run: sfdx auth:sfdxurl:store -f ./SFDX_PRODUCTION_URL.txt -s -a production

      # Run tests for codecov
      # Deploy test results are unusable to codecov due to the 'filename="no-map/Classname' which seems deliberate
      # See bug: https://github.com/forcedotcom/cli/issues/1725
      # See also: https://github.com/forcedotcom/salesforcedx-vscode/issues/5337#issuecomment-1893735430
      - name: "Run Tests to get overall org coverage for reporting"
        run: sf apex test run --code-coverage --test-level RunLocalTests --result-format human --output-dir ./coverage -w 20

      # Upload code coverage data
      - name: "Upload code coverage for Apex to Codecov.io"
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: Apex
          verbose: true

      - name: "Deploy the entire branch to Production org"
        run: sfdx force:source:deploy -p force-app --testlevel RunLocalTests --verbose

      - name: "Deploy destructive changes (if any) to Production org"
        run: sfdx force:mdapi:deploy -d "changed-sources/destructiveChanges" --checkonly --ignorewarnings
